package com.kocci.healtikuy.di

import com.kocci.healtikuy.core.domain.interactor.*
import com.kocci.healtikuy.core.domain.interactor.exercise.JoggingInteractor
import com.kocci.healtikuy.core.domain.interactor.exercise.RunningInteractor
import com.kocci.healtikuy.core.domain.usecase.*
import com.kocci.healtikuy.core.domain.usecase.exercise.cardio.JoggingUseCase
import com.kocci.healtikuy.core.domain.usecase.exercise.cardio.RunningUseCase
import dagger.Binds
import dagger.Module
import dagger.hilt.InstallIn
import dagger.hilt.android.components.ViewModelComponent
import dagger.hilt.android.scopes.ViewModelScoped

@Module
@InstallIn(ViewModelComponent::class)
abstract class AppModule {

    /**
     * This class are generated by hilt
     * For binding purpose purpose.
     * Hilt automatically generate the "Use Case" for us.
     */

    @Binds
    @ViewModelScoped
    abstract fun bindPreferencesUseCase(preferencesInteractor: UserInteractor): UserUseCase

    @Binds
    @ViewModelScoped
    abstract fun bindWaterIntakeUseCase(waterIntakeInteractor: WaterIntakeInteractor): WaterIntakeUseCase

    @Binds
    @ViewModelScoped
    abstract fun bindSleepUseCase(sleepInteractor: SleepInteractor): SleepUseCase

    @Binds
    @ViewModelScoped
    abstract fun bindAuthUseCase(authInteractor: AuthInteractor): AuthUseCase

    @Binds
    @ViewModelScoped
    abstract fun bindStoreUseCase(storeUseCase: StoreInteractor): StoreUseCase

    @Binds
    @ViewModelScoped
    abstract fun bindJoggingUseCase(joggingUseCase: JoggingInteractor): JoggingUseCase

    @Binds
    @ViewModelScoped
    abstract fun bindRunningUseCase(runningInteractor: RunningInteractor) : RunningUseCase

}